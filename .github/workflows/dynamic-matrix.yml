name: Dynamic Matrix

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      name:
        description: 'Name'
        type: string
        required: true
      value:
        description: 'Value'
        type: string
        required: true
jobs:
  outputs-array:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      random-number: ${{ steps.random-number.outputs.result }}
    steps:
      - id: random-number
        uses: actions/github-script@v6
        with:
          script: |
            const min = 1;
            const max = 5;
            const randomnumber = Math.floor(Math.random() * (max - min + 1)) + min;
            let returnArray = [];
            for (let i = 1; i <= randomnumber; i++) {
              returnArray.push(`matrix${i}`);
            }
            let summaryMessage = `Used random number ${randomnumber} to create ${returnArray.length} output items`;
            core.summary
                .addHeading('Output Array Summary')
                .addRaw(summaryMessage)
                .write();

            return returnArray;

  matrix-array:
    needs: outputs-array
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.outputs-array.outputs.random-number) }}
    steps:
      - name: Matrix - ${{ matrix.iteration }}
        run: echo ${{ matrix.iteration }}

  output-object:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      random-object: ${{ steps.random-object.outputs.result }}
    steps:
      - id: random-object
        uses: actions/github-script@v6
        with:
          script: |
            const min = 1;
            const max = 5;
            const randomnumber = Math.floor(Math.random() * (max - min + 1)) + min;
            let returnObject = [];

            for (let i = 1; i <= randomnumber; i++) {
              returnObject.push({ name: `matrix${i}`, value: `value${i}` });
            }

            let summaryMessage = `Used random number ${randomnumber} to create ${returnObject.length} output items`;
            core.summary
                .addHeading('Output Object Summary')
                .addRaw(summaryMessage)
                .write();

            return returnObject;

  matrix-object:
    needs: output-object
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.output-object.outputs.random-object) }}
    steps:
      - name: Matrix - ${{ matrix.iteration.name }} ${{ matrix.iteration.value }}
        run: echo ${{ matrix.iteration.name }}
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/dynamic-matrix.yml
        with:
          name: ${{ matrix.iteration.name }}
          value: ${{ matrix.iteration.value }}

  reusable-workflow:
    if: ${{ github.event_name == 'workflow_call' }}
    runs-on: ubuntu-latest
    name: ${{ github.event.inputs.name }} / ${{ github.event.inputs.value }}
    steps:
      - name: Reusable Workflow - ${{ github.event.inputs.name }}
        run: echo ${{ github.event.inputs.name }} ${{ github.event.inputs.value }}
